С реализацией не так всё сложно. Данные генерируются, функции тоже несложно написать.

Идеально: получить самую эффективную комбинацию людей, а значит максимальную сумму коэффициентов отношений.

Но комбинаций много, простой перебор не работает.

Мы можем к существующему человеку находить следующего по максимальной полезности.

1. Заполнить группы по 10 человек лучшим способом.
То есть, проходимся по всем людям. Им добавляем 9 людей. Считаем сумму отношений.
Будет 174 итерации по всем учащимся. Внутри тоже будут циклы, но это можно подождать.
Если при выборе следующего человека оказывается выбор, то надо добавлять людей до тех пор, пока не будет однозначного выбора на основе суммы отношений групп.
После этого 6 групп будут заполнены по 10 человек оптимальным образом.

2. Далее за одну итерацию добавлять в каждую группу по 1 оптимальному человеку.
Так мы заполним группы довольно оптимально, но максимально ли оптимально? При этом зафиксировать сумму отношений.

3. Найти людей, которые привносят наименьший вклад в эту группу. Допустим по 5 человек из каждой группы. Просто по порядку не стоит их тасовать, очень много комбинаций. Поэтому надо уменьшать количество перебора. Опередлённо люди в прежней группе приносят некий положительный коэффициент.
Предлагаю брать человека. И для него найти группы, в которые он приносит увеличение коэффициента не меньшее, чем вклад в текущую группу / 1.5. Не очень правильно считать прирост коэффициента для группы, где уже 30 человек, поэтому добавил коэффициент 1.5. Тогда мы находим куда можно отправить этого человека.
Пусть это будет {'Имя':[группа:]}

4. После этого найти сочетания людей, которые могут поменяться друг на друга и менять, находить общую сумму, сохранять и общую сумму, и состав групп. И в конце, выбираем состав групп с наибольшей суммой коэффициентов. Если перебор будет долгим, тогда можно коэффициент понизить до 1.

Ну и далее в красивую табличку Excel.

Насколько здравые это рассуждения?
